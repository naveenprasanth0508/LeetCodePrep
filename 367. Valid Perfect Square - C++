1️⃣ Binary Search Approach
class Solution {
public:
    bool isPerfectSquare(int num) {
        long long left = 1, right = num;
        while (left <= right) {
            long long mid = left + (right - left) / 2;
            long long sq = mid * mid;
            if (sq == num) return true;
            else if (sq < num) left = mid + 1;
            else right = mid - 1;
        }
        return false;
    }
};

========================================================

2️⃣ Sum of Odd Numbers Approach
class Solution {
public:
    bool isPerfectSquare(int num) {
        int odd = 1;
        while (num > 0) {
            num -= odd;
            odd += 2;
        }
        return num == 0;
    }
};


=========================================================

3️⃣ Newton’s Method (Square Root Iteration)
class Solution {
public:
    bool isPerfectSquare(long long num) {
        long long x = num;
        while (x * x > num) {
            x = (x + num / x) / 2;
        }
        return x * x == num;
    }
};
